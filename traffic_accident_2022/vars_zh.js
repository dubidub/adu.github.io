var datasets;
var config = {
    "version":"v1",
    "config":{
        "visState":{
            "filters":[],
            "layers":[],
            "interactionConfig":{
                "tooltip":{
                    "fieldsToShow":{
                        "fi4bu3mll":[
                            {"name":"發生時間","format":null},
                            {"name":"發生地點","format":null},
                            {"name":"死亡受傷人數","format":null},
                            {"name":"車種","format":null}
                        ]},
                    "compareMode":false,
                    "compareType":"absolute",
                    "enabled":true
                },
                "brush":{"size":0.5,"enabled":false},
                "geocoder":{"enabled":false},
                "coordinate":{"enabled":false}
            },
            "layerBlending":"additive",
            "splitMaps":[],
            "animationConfig":{"currentTime":null,"speed":1}
            },
        "mapStyle":{
            "styleType":"light",
            "topLayerGroups":{},
            "visibleLayerGroups":{"label":true,"road":true,"border":false,"building":true,"water":true,"land":true,"3d building":false},
            "threeDBuildingColor":[9.665468314072013,17.18305478057247,31.1442867897876],
            "mapStyles":{}
        }        
    }
};

const idValueDict = {
    "臺北市":"taipei",
    "新北市":"newTaipei",
    "桃園市":"taoyuan",
    "臺中市":"taichung",
    "臺南市":"tainan",
    "高雄市":"kaohsiung",
  }
  
const carTypeDict = {
    '人': ['行人', '其他人', '乘客'],
    '全聯結車': ['自用', '營業用'],
    '其他車': ['拖車(架)', '火車', '拼裝車', '農耕用車(或機械)', '其他車', '動力機械'],
    '半聯結車': ['自用', '營業用'],
    '大客車': ['民營公車', '自用大客車', '遊覽車', '民營客運', '公營公車', '公營客運'],
    '大貨車': ['自用', '營業用'],
    '小客車': ['自用', '租賃車', '計程車'],
    '小貨車': ['自用', '營業用'],
    '慢車': ['電動自行車', '人力車', '其他慢車', '獸力車', '電動輔助自行車', '腳踏自行車'],
    '曳引車': ['自用', '營業用'],
    '機車': ['大型重型2(250~550C.C.)', '普通重型', '小型輕型', '大型重型1(550C.C.以上)', '普通輕型'],
    '特種車': ['其他特種車', '消防車', '救護車', '工程車', '警備車'],
    '軍車': ['載重車', '大客車', '小型車']
};

const monthDict = {'一月': ["2020-01-01", "2020-02-01"], '二月': ["2020-02-01", "2020-03-01"],
                    '三月': ["2020-03-01", "2020-04-01"], '四月': ["2020-04-01", "2020-05-01"],
                    '五月': ["2020-05-01", "2020-06-01"], '六月': ["2020-06-01", "2020-07-01"],
                    '七月': ["2020-07-01", "2020-08-01"], '八月': ["2020-08-01", "2020-09-01"],
                    '九月': ["2020-09-01", "2020-10-01"], '十月': ["2020-10-01", "2020-11-01"],
                    '十一月': ["2020-11-01", "2020-12-01"], '十二月': ["2020-12-01", "2021-01-01"]};

const countyDict = {
    '臺東縣':['ttx',[22.775481944188066, 121.06401508445383]],
    '臺南市':['tns',[23.009594627596382, 120.22560044372621]],
    '基隆市':['kls',[25.12751784300647, 121.7386105730662]],
    '新竹縣':['hcx',[24.839184024562645, 121.01805275355595]],
    '澎湖縣':['phx',[23.57233319752079, 119.57696711633714]],
    '雲林縣':['ylx',[23.71472487275197, 120.41800745241785]],
    '桃園市':['tys',[24.99341818647773, 121.29687715882831]],
    '屏東縣':['ptx',[22.550901265648296, 120.5343648302878]],
    '高雄市':['khs',[22.630233940647365, 120.30165007353534]],
    '連江縣':['lcx',[26.16241296146613, 119.95258401926624]],
    '嘉義縣':['cyx',[23.448944702883946, 120.2389961010698]],
    '新竹市':['hcs',[24.816813130043645, 120.96875443687992]],
    '新北市':['nts',[25.01677584278663, 121.46256325590495]],
    '苗栗縣':['mlx',[24.562424618241057, 120.81396476472885]],
    '彰化縣':['chx',[24.086127363007307, 120.55040316817312]],
    '南投縣':['ntx',[23.961483293693956, 120.98067816204518]],
    '宜蘭縣':['lyx',[24.703711110778496, 121.73677213570892]],
    '金門縣':['kmx',[24.450886040473296, 118.37540629044638]],
    '臺北市':['tps',[25.06171707762224, 121.55077845541885]],
    '嘉義市':['cys',[23.481786157153703, 120.44306904160656]],
    '花蓮縣':['hlx',[23.989289558008657, 121.6054277782498]],
    '臺中市':['tcs',[24.14834345943802, 120.67060076278258]]
};

const getDatesBetweenDates = (startDate, endDate) => {
    let dates = []
    //to avoid modifying the original date
    const theDate = new Date(startDate)
    while (theDate < endDate) {
    let dd = theDate.getDate();
    let mm = theDate.getMonth()+1;
    const yyyy = theDate.getFullYear();
    dates = [...dates, yyyy + '-' + (mm>9 ? '' : '0') + mm + '-' + (dd>9 ? '' : '0') + dd]
    theDate.setDate(theDate.getDate() + 1)
    }
    return dates
}
